<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-config.dtd">
<configuration>

    <!-- properties中定义的属性，使用可替换的属性来实现动态配置 -->
    <!-- 在properties元素体内指定的属性首先被读取，然后再读取resource中执行的属性文件的属性。后者会替换前者 -->
	<properties resource="database.properties">
		<property name="username" value="root" />
		<property name="password" value="rootadmin" />
	</properties>

    <!-- 极其重要的调整，它们会修改MyBatis在运行时的行为方式  -->
	<settings>
		<setting name="cacheEnabled" value="true" />
		<setting name="lazyLoadingEnabled" value="true" />
		<setting name="multipleResultSetsEnabled" value="true" />
		<setting name="useColumnLabel" value="true" />
		<setting name="useGeneratedKeys" value="false" />
		<setting name="defaultExecutorType" value="SIMPLE" />
		<setting name="defaultStatementTimeout" value="25000" />
	</settings>
    
    <!-- 类型别名是为Java类型命名一个短的名字。它只和XML配置有关，只用来减少类完全限定名的多余部分  -->
	<typeAliases>
	   <typeAlias alias="UserEntity" type="com.dotuian.entity.UserEntity"/>
	
	</typeAliases>


    <!-- 
        environments: MyBatis可以配置多种环境。这会帮助你将SQL映射应用于多种数据库之中。 
                可以配置多种环境，但你只能为每个SqlSessionFactory实例选择一个。如果你想连接两个数据库，你需要创建两个SqlSessionFactory实例
    -->
	<environments default="development">
		<environment id="development">
            <!-- 事务管理器的配置 -->
			<!-- 数据源的配置，在MyBatis中有两种事务管理器类型
			     1.JDBC – 这个配置直接简单使用了JDBC的提交和回滚设置。它依赖于从数据源得到的连接来管理事务范围。
			     2.MANAGED – 这个配置几乎没做什么。它从来不提交或回滚一个连接。而它会让容器来管理事务的整个生命周期（比如Spring或JEE应用服务器的上下文）。
			-->
			<transactionManager type="JDBC" />
            <!-- 配置数据源类型(POOLED – 这是JDBC连接对象的数据源连接池的实现，用来避免创建新的连接实例时必要的初始连接和认证时间。)-->			
			<dataSource type="POOLED">
				<property name="driver" value="${driver}" />
				<property name="url" value="${url}" />
				<property name="username" value="${username}" />
				<property name="password" value="${password}" />
			</dataSource>
		</environment>
	</environments>
	
	<!-- 配置映射文件路径 -->
	<mappers>
		<mapper resource="com/dotuian/conf/sqlmap/UserMapper.xml" />
	</mappers>
	
</configuration>


